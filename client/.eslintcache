[{"D:\\Dev\\time-tracker\\client\\src\\index.js":"1","D:\\Dev\\time-tracker\\client\\src\\App.js":"2","D:\\Dev\\time-tracker\\client\\src\\reportWebVitals.js":"3","D:\\Dev\\time-tracker\\client\\src\\pages\\AuthPage.js":"4","D:\\Dev\\time-tracker\\client\\src\\context\\AuthContex.js":"5","D:\\Dev\\time-tracker\\client\\src\\pages\\templates\\MainPageTemplate.js":"6","D:\\Dev\\time-tracker\\client\\src\\features\\MainNavigation.js":"7","D:\\Dev\\time-tracker\\client\\src\\pages\\HomePage.js":"8","D:\\Dev\\time-tracker\\client\\src\\features\\Routes.js":"9","D:\\Dev\\time-tracker\\client\\src\\hooks\\useHttp.js":"10","D:\\Dev\\time-tracker\\client\\src\\hooks\\useAuth.js":"11","D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\AddActivity.js":"12","D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\StartActivity.js":"13","D:\\Dev\\time-tracker\\client\\src\\features\\SuccessfulRequestNotification.js":"14"},{"size":544,"mtime":1612371988018,"results":"15","hashOfConfig":"16"},{"size":459,"mtime":1612373867880,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":3237,"mtime":1611938559442,"results":"19","hashOfConfig":"16"},{"size":208,"mtime":1612285380189,"results":"20","hashOfConfig":"16"},{"size":365,"mtime":1612376969512,"results":"21","hashOfConfig":"16"},{"size":585,"mtime":1612376040757,"results":"22","hashOfConfig":"16"},{"size":307,"mtime":1612449241524,"results":"23","hashOfConfig":"16"},{"size":664,"mtime":1612285485176,"results":"24","hashOfConfig":"16"},{"size":933,"mtime":1612452150065,"results":"25","hashOfConfig":"16"},{"size":823,"mtime":1612128438825,"results":"26","hashOfConfig":"16"},{"size":1696,"mtime":1612456274241,"results":"27","hashOfConfig":"16"},{"size":4247,"mtime":1612879411910,"results":"28","hashOfConfig":"16"},{"size":626,"mtime":1612455886451,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"pv2lux",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"D:\\Dev\\time-tracker\\client\\src\\index.js",[],["62","63"],"D:\\Dev\\time-tracker\\client\\src\\App.js",[],"D:\\Dev\\time-tracker\\client\\src\\reportWebVitals.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\AuthPage.js",[],"D:\\Dev\\time-tracker\\client\\src\\context\\AuthContex.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\templates\\MainPageTemplate.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\MainNavigation.js",["64","65","66"],"import React, {useContext} from 'react'\r\nimport {Button, Form, FormControl, Navbar, Row} from 'react-bootstrap'\r\nimport {AuthContext} from '../context/AuthContex'\r\n\r\nconst MainNavigation = () => {\r\n    const auth = useContext(AuthContext)\r\n    return (\r\n        <Navbar bg='light' expand='lg' className='justify-content-between'>\r\n            <Navbar.Brand href='/'>Time Tracker</Navbar.Brand>\r\n\r\n            <Button onClick={() => auth.logOut()} variant='outline-primary'>\r\n                Log Out\r\n            </Button>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default MainNavigation\r\n","D:\\Dev\\time-tracker\\client\\src\\pages\\HomePage.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\Routes.js",[],"D:\\Dev\\time-tracker\\client\\src\\hooks\\useHttp.js",[],"D:\\Dev\\time-tracker\\client\\src\\hooks\\useAuth.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\AddActivity.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\StartActivity.js",["67","68","69","70","71"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport useHttp from '../../hooks/useHttp'\r\nimport {AuthContext} from '../../context/AuthContex'\r\nimport {Modal, Button, Form, Container, Alert, Card} from 'react-bootstrap'\r\nimport AddActivity from './AddActivity'\r\n\r\nconst StartActivity = () => {\r\n    const userId = useContext(AuthContext).userId\r\n\r\n    const {register, handleSubmit, watch} = useForm()\r\n    const {request} = useHttp()\r\n\r\n    const [showAddActivityType, setShowAddActivityType] = useState(false)\r\n    const activityTypeValue = watch('activityType', false)\r\n    const handleClose = () => {\r\n        setShowAddActivityType(false)\r\n    }\r\n    useEffect(() => {\r\n        if (activityTypeValue === 'newActivityItem') {\r\n            setShowAddActivityType(true)\r\n        }\r\n    }, [activityTypeValue])\r\n\r\n    const [activityTypes, setActivityTypes] = useState([])\r\n    const [startedActivity, setStartedActivity] = useState([])\r\n    const getActivity = async () => {\r\n        const response = await request('/activity', 'GET', null, {'user-id': userId})\r\n        setActivityTypes(response.activityTypes)\r\n        setStartedActivity(response.startedActivity)\r\n        console.log(response)\r\n    }\r\n    useEffect(() => {\r\n        getActivity()\r\n    }, [])\r\n\r\n    const StartActivity = async data => {\r\n        data.start = new Date().getTime()\r\n        const response = await request('/activity/start', 'POST', data, {'user-id': userId})\r\n        getActivity()\r\n    }\r\n\r\n    const endActivity = async activityId => {\r\n        const data = {}\r\n        data.end = new Date().getTime()\r\n        data.id = activityId\r\n        const response = await request(`/activity/${activityId}/end`, 'POST', data, {\r\n            'user-id': userId,\r\n        })\r\n        getActivity()\r\n    }\r\n    return (\r\n        <>\r\n            {startedActivity.length > 0 ? (\r\n                <Container>\r\n                    <h2 className='m-0'>Started activity</h2>\r\n                    <small> press to end</small>\r\n                    {startedActivity.map(item => (\r\n                        <Container\r\n                            fluid\r\n                            className='mb-1 p-1 border border-success rounded-sm'\r\n                            onClick={() => {\r\n                                endActivity(item._id)\r\n                            }}\r\n                        >\r\n                            {item.name}\r\n                        </Container>\r\n                    ))}\r\n                </Container>\r\n            ) : null}\r\n            <Modal centered show={showAddActivityType} onHide={handleClose}>\r\n                <Modal.Header closeButton className='p-0 pr-1 border-0 '></Modal.Header>\r\n\r\n                <AddActivity handleClose={handleClose} userId={userId} />\r\n            </Modal>\r\n\r\n            <Container className='py-3'>\r\n                <h2>Start new activity</h2>\r\n                <Form onSubmit={handleSubmit(StartActivity)}>\r\n                    <Form.Group>\r\n                        <Form.Control\r\n                            name='activityType'\r\n                            as='select'\r\n                            ref={register({\r\n                                require: true,\r\n                                minLength: 1,\r\n                                validate: value => value !== 'not a option',\r\n                            })}\r\n                        >\r\n                            <option hidden value='not a option'>\r\n                                Choose activity type\r\n                            </option>\r\n                            {activityTypes.map(item => (\r\n                                <option key={item._id} value={item.name}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                            <option value='newActivityItem'>add new...</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button block variant='primary' type='submit'>\r\n                        Start\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartActivity\r\n","D:\\Dev\\time-tracker\\client\\src\\features\\SuccessfulRequestNotification.js",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":17,"nodeType":"80","messageId":"81","endLine":2,"endColumn":21},{"ruleId":"78","severity":1,"message":"82","line":2,"column":23,"nodeType":"80","messageId":"81","endLine":2,"endColumn":34},{"ruleId":"78","severity":1,"message":"83","line":2,"column":44,"nodeType":"80","messageId":"81","endLine":2,"endColumn":47},{"ruleId":"78","severity":1,"message":"84","line":5,"column":41,"nodeType":"80","messageId":"81","endLine":5,"endColumn":46},{"ruleId":"78","severity":1,"message":"85","line":5,"column":48,"nodeType":"80","messageId":"81","endLine":5,"endColumn":52},{"ruleId":"86","severity":1,"message":"87","line":35,"column":8,"nodeType":"88","endLine":35,"endColumn":10,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"90","line":39,"column":15,"nodeType":"80","messageId":"81","endLine":39,"endColumn":23},{"ruleId":"78","severity":1,"message":"90","line":47,"column":15,"nodeType":"80","messageId":"81","endLine":47,"endColumn":23},{"ruleId":"74","replacedBy":"91"},{"ruleId":"76","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Row' is defined but never used.","'Alert' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActivity'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'response' is assigned a value but never used.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [getActivity]",{"range":"98","text":"99"},[1316,1318],"[getActivity]"]