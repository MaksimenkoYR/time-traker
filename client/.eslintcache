[{"D:\\Dev\\time-tracker\\client\\src\\index.js":"1","D:\\Dev\\time-tracker\\client\\src\\App.js":"2","D:\\Dev\\time-tracker\\client\\src\\reportWebVitals.js":"3","D:\\Dev\\time-tracker\\client\\src\\pages\\AuthPage.js":"4","D:\\Dev\\time-tracker\\client\\src\\context\\AuthContex.js":"5","D:\\Dev\\time-tracker\\client\\src\\pages\\templates\\MainPageTemplate.js":"6","D:\\Dev\\time-tracker\\client\\src\\features\\MainNavigation.js":"7","D:\\Dev\\time-tracker\\client\\src\\pages\\HomePage.js":"8","D:\\Dev\\time-tracker\\client\\src\\features\\Routes.js":"9","D:\\Dev\\time-tracker\\client\\src\\hooks\\useHttp.js":"10","D:\\Dev\\time-tracker\\client\\src\\hooks\\useAuth.js":"11","D:\\Dev\\time-tracker\\client\\src\\features\\Activity.js":"12"},{"size":544,"mtime":1612371988018,"results":"13","hashOfConfig":"14"},{"size":459,"mtime":1612373867880,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":3237,"mtime":1611938559442,"results":"17","hashOfConfig":"14"},{"size":208,"mtime":1612285380189,"results":"18","hashOfConfig":"14"},{"size":365,"mtime":1612285543778,"results":"19","hashOfConfig":"14"},{"size":585,"mtime":1612376040757,"results":"20","hashOfConfig":"14"},{"size":289,"mtime":1612108415798,"results":"21","hashOfConfig":"14"},{"size":664,"mtime":1612285485176,"results":"22","hashOfConfig":"14"},{"size":935,"mtime":1612128729295,"results":"23","hashOfConfig":"14"},{"size":823,"mtime":1612128438825,"results":"24","hashOfConfig":"14"},{"size":4416,"mtime":1612373343224,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pv2lux",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"D:\\Dev\\time-tracker\\client\\src\\index.js",[],["52","53"],"D:\\Dev\\time-tracker\\client\\src\\App.js",[],"D:\\Dev\\time-tracker\\client\\src\\reportWebVitals.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\AuthPage.js",[],"D:\\Dev\\time-tracker\\client\\src\\context\\AuthContex.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\templates\\MainPageTemplate.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\MainNavigation.js",["54","55","56"],"D:\\Dev\\time-tracker\\client\\src\\pages\\HomePage.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\Routes.js",[],"D:\\Dev\\time-tracker\\client\\src\\hooks\\useHttp.js",[],"D:\\Dev\\time-tracker\\client\\src\\hooks\\useAuth.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\Activity.js",["57","58","59"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport useHttp from '../hooks/useHttp'\r\nimport {AuthContext} from '../context/AuthContex'\r\nimport {Modal, Button} from 'react-bootstrap'\r\n\r\nconst AddActivity = () => {\r\n    const {register, handleSubmit, watch} = useForm()\r\n    const activityTypeValue = watch('activityType', false)\r\n    const userId = useContext(AuthContext).userId\r\n    const {request} = useHttp()\r\n    const [addActivityType, setAddActivityType] = useState(false)\r\n    const handleClose = () => {\r\n        setAddActivityType(false)\r\n    }\r\n\r\n    const [activityTypes, setActivityTypes] = useState([])\r\n    const getActivityTypes = async () => {\r\n        const response = await request('/activity/types', 'GET', null, {'user-id': userId})\r\n        setActivityTypes(response)\r\n    }\r\n\r\n    const addActivityTypes = async data => {\r\n        try {\r\n            const response = await request('/activity/types', 'POST', data, {'user-id': userId})\r\n        } catch (e) {}\r\n    }\r\n    useEffect(() => {\r\n        getActivityTypes()\r\n    }, [])\r\n    useEffect(() => {\r\n        if (activityTypeValue === 'newActivityItem') {\r\n            setAddActivityType(true)\r\n            console.log(addActivityType)\r\n        }\r\n    }, [activityTypeValue])\r\n    if (activityTypes.length === 0) {\r\n        return (\r\n            <>\r\n                <h1>First create activity type</h1>\r\n                <form onSubmit={handleSubmit(addActivityTypes)}>\r\n                    <div className='mb-3'>\r\n                        <label htmlFor='exampleInputEmail1' className='htmlForm-label'>\r\n                            Activity name\r\n                        </label>\r\n                        <input\r\n                            ref={register({required: true})}\r\n                            className='htmlForm-control'\r\n                            id='exampleInputEmail1'\r\n                            aria-describedby='emailHelp'\r\n                            name='activityName'\r\n                        />\r\n                    </div>\r\n\r\n                    <button type='submit' className='btn btn-primary'>\r\n                        Add\r\n                    </button>\r\n                </form>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Modal show={addActivityType} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant='secondary' onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant='primary' onClick={handleClose}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <div className='container'>\r\n                    <h2>Start activity</h2>\r\n                    <form onSubmit={handleSubmit(data => console.log(data))}>\r\n                        <select\r\n                            name='activityType'\r\n                            className='form-select mb-3'\r\n                            ref={register({\r\n                                require: true,\r\n                                minLength: 1,\r\n                                validate: value => value !== 'not a option',\r\n                            })}\r\n                        >\r\n                            <option hidden value='not a option'>\r\n                                Choose activity type\r\n                            </option>\r\n                            {activityTypes.map(item => (\r\n                                <option key={item._id} value={item.name}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                            <option value='newActivityItem'>add new...</option>\r\n                        </select>\r\n\r\n                        <button type='submit' className='btn btn-primary'>\r\n                            start\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivity\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":21},{"ruleId":"64","severity":1,"message":"68","line":2,"column":23,"nodeType":"66","messageId":"67","endLine":2,"endColumn":34},{"ruleId":"64","severity":1,"message":"69","line":2,"column":44,"nodeType":"66","messageId":"67","endLine":2,"endColumn":47},{"ruleId":"64","severity":1,"message":"70","line":25,"column":19,"nodeType":"66","messageId":"67","endLine":25,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":30,"column":8,"nodeType":"73","endLine":30,"endColumn":10,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":36,"column":8,"nodeType":"73","endLine":36,"endColumn":27,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'Row' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActivityTypes'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'addActivityType'. Either include it or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [getActivityTypes]",{"range":"85","text":"86"},"Update the dependencies array to be: [activityTypeValue, addActivityType]",{"range":"87","text":"88"},[1105,1107],"[getActivityTypes]",[1287,1306],"[activityTypeValue, addActivityType]"]