[{"D:\\Dev\\time-tracker\\client\\src\\index.js":"1","D:\\Dev\\time-tracker\\client\\src\\App.js":"2","D:\\Dev\\time-tracker\\client\\src\\reportWebVitals.js":"3","D:\\Dev\\time-tracker\\client\\src\\pages\\AuthPage.js":"4","D:\\Dev\\time-tracker\\client\\src\\context\\AuthContex.js":"5","D:\\Dev\\time-tracker\\client\\src\\pages\\templates\\MainPageTemplate.js":"6","D:\\Dev\\time-tracker\\client\\src\\features\\MainNavigation.js":"7","D:\\Dev\\time-tracker\\client\\src\\pages\\HomePage.js":"8","D:\\Dev\\time-tracker\\client\\src\\features\\Routes.js":"9","D:\\Dev\\time-tracker\\client\\src\\hooks\\useHttp.js":"10","D:\\Dev\\time-tracker\\client\\src\\hooks\\useAuth.js":"11","D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\AddActivity.js":"12","D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\StartActivity.js":"13","D:\\Dev\\time-tracker\\client\\src\\features\\SuccessfulRequestNotification.js":"14","D:\\Dev\\time-tracker\\client\\src\\pages\\ManageActivityTypesPage.js":"15","D:\\Dev\\time-tracker\\client\\src\\pages\\ManageActivityPage.js":"16"},{"size":544,"mtime":1612371988018,"results":"17","hashOfConfig":"18"},{"size":459,"mtime":1612373867880,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":3167,"mtime":1612892276815,"results":"21","hashOfConfig":"18"},{"size":208,"mtime":1612285380189,"results":"22","hashOfConfig":"18"},{"size":365,"mtime":1612376969512,"results":"23","hashOfConfig":"18"},{"size":1232,"mtime":1612896524589,"results":"24","hashOfConfig":"18"},{"size":307,"mtime":1612449241524,"results":"25","hashOfConfig":"18"},{"size":1047,"mtime":1612896450588,"results":"26","hashOfConfig":"18"},{"size":933,"mtime":1612452150065,"results":"27","hashOfConfig":"18"},{"size":823,"mtime":1612128438825,"results":"28","hashOfConfig":"18"},{"size":1731,"mtime":1612894824115,"results":"29","hashOfConfig":"18"},{"size":4216,"mtime":1612895557190,"results":"30","hashOfConfig":"18"},{"size":626,"mtime":1612455886451,"results":"31","hashOfConfig":"18"},{"size":2380,"mtime":1612895311212,"results":"32","hashOfConfig":"18"},{"size":261,"mtime":1612896475032,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"pv2lux",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Dev\\time-tracker\\client\\src\\index.js",[],["71","72"],"D:\\Dev\\time-tracker\\client\\src\\App.js",[],"D:\\Dev\\time-tracker\\client\\src\\reportWebVitals.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\AuthPage.js",["73"],"import React, {useContext} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport {AuthContext} from '../context/AuthContex'\r\nimport useHttp from '../hooks/useHttp'\r\n\r\nconst AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const {request} = useHttp()\r\n    const {register, handleSubmit} = useForm()\r\n    const logIn = async data => {\r\n        try {\r\n            const response = await request('/api/auth/login', 'POST', data)\r\n            auth.logIn(response.token, response.userId)\r\n        } catch (error) {}\r\n    }\r\n    const registration = async data => {\r\n        try {\r\n            const response = await request('/api/auth/registration', 'POST', data)\r\n        } catch (error) {}\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <h1>authentication</h1>\r\n            <form>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='email' className='form-label'>\r\n                        Email address\r\n                    </label>\r\n                    <input\r\n                        name='email'\r\n                        type='email'\r\n                        className='form-control'\r\n                        id='email'\r\n                        aria-describedby='emailHelp'\r\n                        ref={register}\r\n                    />\r\n                    <div id='emailHelp' className='form-text'>\r\n                        We'll never share your email with anyone else.\r\n                    </div>\r\n                </div>\r\n                <div className='mb-3'>\r\n                    <label htmlFor='password' className='form-label'>\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        ref={register}\r\n                        type='password'\r\n                        className='form-control'\r\n                        id='password'\r\n                        name='password'\r\n                    />\r\n                </div>\r\n                <div className='mb-3 form-check'>\r\n                    <input\r\n                        name='rememberMe'\r\n                        type='checkbox'\r\n                        className='form-check-input'\r\n                        id='rememberMe'\r\n                        ref={register}\r\n                    />\r\n                    <label className='form-check-label' htmlFor='rememberMe'>\r\n                        Check me out\r\n                    </label>\r\n                </div>\r\n                <div className='row justify-content-evenly'>\r\n                    <button\r\n                        onClick={handleSubmit(logIn)}\r\n                        type='submit'\r\n                        className='btn btn-primary col-4'\r\n                    >\r\n                        Log In\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSubmit(registration)}\r\n                        type='submit'\r\n                        className='btn btn-outline-primary col-4'\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage\r\n","D:\\Dev\\time-tracker\\client\\src\\context\\AuthContex.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\templates\\MainPageTemplate.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\MainNavigation.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\HomePage.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\Routes.js",[],"D:\\Dev\\time-tracker\\client\\src\\hooks\\useHttp.js",[],"D:\\Dev\\time-tracker\\client\\src\\hooks\\useAuth.js",[],"D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\AddActivity.js",["74"],"import React, {useState} from 'react'\r\nimport {Button, Container, Form} from 'react-bootstrap'\r\nimport {useForm} from 'react-hook-form'\r\nimport useHttp from '../../hooks/useHttp'\r\nimport SuccessfulRequestNotification from '../SuccessfulRequestNotification'\r\nconst AddActivity = ({userId, ...props}) => {\r\n    const {request, error} = useHttp()\r\n    const {register, handleSubmit} = useForm()\r\n    const [showActivityAdded, setShowActivityAdded] = useState(false)\r\n    const addActivityTypes = async data => {\r\n        try {\r\n            const response = await request('/activity/types', 'POST', data, {'user-id': userId})\r\n            if (!error) {\r\n                setShowActivityAdded(true)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n            throw e\r\n        }\r\n    }\r\n    return (\r\n        <Container className='px-2 pb-2'>\r\n            <SuccessfulRequestNotification\r\n                show={showActivityAdded}\r\n                setShow={setShowActivityAdded}\r\n            />\r\n\r\n            <Form onSubmit={handleSubmit(addActivityTypes)}>\r\n                <Form.Group controlId='formBasicEmail'>\r\n                    <Form.Label>add new activity </Form.Label>\r\n                    <Form.Control\r\n                        ref={register({\r\n                            required: true,\r\n                            minLength: 1,\r\n                        })}\r\n                        name='name'\r\n                        placeholder='activity name '\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button block variant='primary' type='submit'>\r\n                    Add\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddActivity\r\n","D:\\Dev\\time-tracker\\client\\src\\features\\Activity\\StartActivity.js",["75","76","77","78","79"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport useHttp from '../../hooks/useHttp'\r\nimport {AuthContext} from '../../context/AuthContex'\r\nimport {Modal, Button, Form, Container, Alert, Card} from 'react-bootstrap'\r\nimport AddActivity from './AddActivity'\r\n\r\nconst StartActivity = () => {\r\n    const userId = useContext(AuthContext).userId\r\n\r\n    const {register, handleSubmit, watch} = useForm()\r\n    const {request} = useHttp()\r\n\r\n    const [showAddActivityType, setShowAddActivityType] = useState(false)\r\n    const activityTypeValue = watch('activityType', false)\r\n    const handleClose = () => {\r\n        setShowAddActivityType(false)\r\n    }\r\n    useEffect(() => {\r\n        if (activityTypeValue === 'newActivityItem') {\r\n            setShowAddActivityType(true)\r\n        }\r\n    }, [activityTypeValue])\r\n\r\n    const [activityTypes, setActivityTypes] = useState([])\r\n    const [startedActivity, setStartedActivity] = useState([])\r\n    const getActivity = async () => {\r\n        const response = await request('/activity', 'GET', null, {'user-id': userId})\r\n        setActivityTypes(response.activityTypes)\r\n        setStartedActivity(response.startedActivity)\r\n    }\r\n    useEffect(() => {\r\n        getActivity()\r\n    }, [])\r\n\r\n    const StartActivity = async data => {\r\n        data.start = new Date().getTime()\r\n        const response = await request('/activity/start', 'POST', data, {'user-id': userId})\r\n        getActivity()\r\n    }\r\n\r\n    const endActivity = async activityId => {\r\n        const data = {}\r\n        data.end = new Date().getTime()\r\n        data.id = activityId\r\n        const response = await request(`/activity/${activityId}/end`, 'POST', data, {\r\n            'user-id': userId,\r\n        })\r\n        getActivity()\r\n    }\r\n    return (\r\n        <>\r\n            {startedActivity.length > 0 ? (\r\n                <Container>\r\n                    <h2 className='m-0'>Started activity</h2>\r\n                    <small> press to end</small>\r\n                    {startedActivity.map(item => (\r\n                        <Container\r\n                            fluid\r\n                            className='mb-1 p-1 border border-success rounded-sm'\r\n                            onClick={() => {\r\n                                endActivity(item._id)\r\n                            }}\r\n                        >\r\n                            {item.name}\r\n                        </Container>\r\n                    ))}\r\n                </Container>\r\n            ) : null}\r\n            <Modal centered show={showAddActivityType} onHide={handleClose}>\r\n                <Modal.Header closeButton className='p-0 pr-1 border-0 '></Modal.Header>\r\n\r\n                <AddActivity handleClose={handleClose} userId={userId} />\r\n            </Modal>\r\n\r\n            <Container className='py-3'>\r\n                <h2>Start new activity</h2>\r\n                <Form onSubmit={handleSubmit(StartActivity)}>\r\n                    <Form.Group>\r\n                        <Form.Control\r\n                            name='activityType'\r\n                            as='select'\r\n                            ref={register({\r\n                                require: true,\r\n                                minLength: 1,\r\n                                validate: value => value !== 'not a option',\r\n                            })}\r\n                        >\r\n                            <option hidden value='not a option'>\r\n                                Choose activity type\r\n                            </option>\r\n                            {activityTypes.map(item => (\r\n                                <option key={item._id} value={item.name}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                            <option value='newActivityItem'>add new...</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button block variant='primary' type='submit'>\r\n                        Start\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartActivity\r\n","D:\\Dev\\time-tracker\\client\\src\\features\\SuccessfulRequestNotification.js",[],"D:\\Dev\\time-tracker\\client\\src\\pages\\ManageActivityTypesPage.js",["80","81"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {Button, Col, Container, Row} from 'react-bootstrap'\r\nimport {AuthContext} from '../context/AuthContex'\r\nimport AddActivity from '../features/Activity/AddActivity'\r\nimport useHttp from '../hooks/useHttp'\r\nimport MainTemplate from './templates/MainPageTemplate'\r\n\r\nconst ManageActivityTypesPage = () => {\r\n    const userId = useContext(AuthContext).userId\r\n    const {request} = useHttp()\r\n    const getActivity = async () => {\r\n        const response = await request('/activity', 'GET', null, {'user-id': userId})\r\n        console.log(response)\r\n        setActivityTypes(response.activityTypes)\r\n    }\r\n    const [activityTypes, setActivityTypes] = useState([])\r\n\r\n    useEffect(() => {\r\n        getActivity()\r\n    }, [])\r\n\r\n    const deleteActivityType = async id => {\r\n        const response = await request(\r\n            `/manage/activity_types/${id}`,\r\n            'DELETE',\r\n            {id: id},\r\n            {'user-id': userId}\r\n        )\r\n        getActivity()\r\n    }\r\n    return (\r\n        <MainTemplate>\r\n            <AddActivity userId={userId} />\r\n            <Container className='pt-3'>\r\n                {activityTypes.map(item => (\r\n                    <Row\r\n                        key={item._id}\r\n                        className=' justify-content-end border border-success rounded-sm p-2'\r\n                        noGutters\r\n                    >\r\n                        <Col>{item.name}</Col>\r\n                        <Col xs={3} className='d-flex justify-content-end'>\r\n                            <Button variant='outline-primary' size='sm' className='p-1 border-0 '>\r\n                                Edit\r\n                            </Button>\r\n                            <Button\r\n                                variant='outline-danger'\r\n                                size='sm'\r\n                                className='p-1 border-0'\r\n                                onClick={() => {\r\n                                    deleteActivityType(item._id)\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                ))}\r\n            </Container>\r\n        </MainTemplate>\r\n    )\r\n}\r\n\r\nexport default ManageActivityTypesPage\r\n","D:\\Dev\\time-tracker\\client\\src\\pages\\ManageActivityPage.js",["82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":18,"column":19,"nodeType":"89","messageId":"90","endLine":18,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":12,"column":19,"nodeType":"89","messageId":"90","endLine":12,"endColumn":27},{"ruleId":"87","severity":1,"message":"91","line":5,"column":41,"nodeType":"89","messageId":"90","endLine":5,"endColumn":46},{"ruleId":"87","severity":1,"message":"92","line":5,"column":48,"nodeType":"89","messageId":"90","endLine":5,"endColumn":52},{"ruleId":"93","severity":1,"message":"94","line":34,"column":8,"nodeType":"95","endLine":34,"endColumn":10,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"88","line":38,"column":15,"nodeType":"89","messageId":"90","endLine":38,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":46,"column":15,"nodeType":"89","messageId":"90","endLine":46,"endColumn":23},{"ruleId":"93","severity":1,"message":"94","line":20,"column":8,"nodeType":"95","endLine":20,"endColumn":10,"suggestions":"97"},{"ruleId":"87","severity":1,"message":"88","line":23,"column":15,"nodeType":"89","messageId":"90","endLine":23,"endColumn":23},{"ruleId":"87","severity":1,"message":"98","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActivity'. Either include it or remove the dependency array.","ArrayExpression",["101"],["102"],"'MainNavigation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},"Update the dependencies array to be: [getActivity]",{"range":"106","text":"107"},{"range":"108","text":"107"},[1285,1287],"[getActivity]",[787,789]]